const https = require('https');

async function testSalesCodeLookup() {
  console.log('üîç ÊµãËØïsales_codeÊü•ÊâæÈóÆÈ¢ò...');
  
  console.log('\nüìã ÈóÆÈ¢òÂàÜÊûê:');
  console.log('1. SSMDYCKFXCPT48 ‰∏ç‰ª•ps_Êàñss_ÂºÄÂ§¥');
  console.log('2. orders.js‰ΩøÁî® WHERE sales_code = ? Êü•Êâæ');
  console.log('3. ‰ΩÜprimary_sales/secondary_salesË°®Áº∫Â∞ësales_codeÂ≠óÊÆµ');
  console.log('4. Êü•ËØ¢Â§±Ë¥• ‚Üí ËøîÂõû"‰∏ãÂçïÊã•Êå§ÔºåËØ∑Á≠âÂæÖ"');
  
  console.log('\nüß™ ÊµãËØï‰∏çÂêåÊ†ºÂºèÁöÑsales_code:');
  
  // ÊµãËØï1: ps_ÂºÄÂ§¥ÁöÑ‰ª£Á†ÅÔºà‰ΩøÁî®IDÊü•ÊâæÔºâ
  await testOrderCreate('ps_1', 'Â∫îËØ•ÊàêÂäü - ‰ΩøÁî®IDÊü•Êâæ');
  
  // ÊµãËØï2: ‰∏çËßÑËåÉÊ†ºÂºèÁöÑ‰ª£Á†ÅÔºà‰ΩøÁî®sales_codeÂ≠óÊÆµÊü•ÊâæÔºâ
  await testOrderCreate('SSMDYCKFXCPT48', 'Â§±Ë¥• - sales_codeÂ≠óÊÆµ‰∏çÂ≠òÂú®');
  
  console.log('\nüí° Ëß£ÂÜ≥ÊñπÊ°à:');
  console.log('1. Á°Æ‰øùALTER TABLEÊ∑ªÂä†sales_codeÂ≠óÊÆµÂà∞primary_salesÂíåsecondary_salesË°®');
  console.log('2. ÊàñËÄÖÂú®Êï∞ÊçÆÂ∫ì‰∏≠ÊèíÂÖ•SSMDYCKFXCPT48ÂØπÂ∫îÁöÑÈîÄÂîÆËÆ∞ÂΩï');
  console.log('3. ÊàñËÄÖ‰øÆÊîπorders.jsÁöÑÊü•ÊâæÈÄªËæëÔºå‰ΩøÁî®ÂÖ∂‰ªñÂ≠óÊÆµÂåπÈÖç');
}

async function testOrderCreate(sales_code, description) {
  return new Promise((resolve, reject) => {
    const orderData = JSON.stringify({
      sales_code: sales_code,
      tradingview_username: 'test_user_' + Date.now(),
      duration: '1month',
      amount: 99,
      payment_method: 'alipay',
      payment_time: new Date().toISOString(),
      purchase_type: 'immediate'
    });

    const options = {
      hostname: 'zhixing-seven.vercel.app',
      port: 443,
      path: '/api/orders?path=create',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': orderData.length
      }
    };

    const req = https.request(options, (res) => {
      let responseData = '';

      res.on('data', (chunk) => {
        responseData += chunk;
      });

      res.on('end', () => {
        try {
          const result = JSON.parse(responseData);
          console.log(`\nüìä ${sales_code} (${description}):`);
          console.log(`Áä∂ÊÄÅÁ†Å: ${res.statusCode}`);
          
          if (result.success) {
            console.log('‚úÖ ËÆ¢ÂçïÂàõÂª∫ÊàêÂäü');
          } else {
            console.log('‚ùå Â§±Ë¥•:', result.message);
            if (result.message.includes('‰∏ãÂçïÊã•Êå§')) {
              console.log('   ‚Üí Á°ÆËÆ§: sales_codeÊü•ÊâæÂ§±Ë¥•');
            }
          }
        } catch (error) {
          console.log('ÂéüÂßãÂìçÂ∫î:', responseData);
        }
        resolve();
      });
    });

    req.on('error', (error) => {
      console.error('‚ùå ËØ∑Ê±ÇÂ§±Ë¥•:', error);
      resolve();
    });

    req.write(orderData);
    req.end();
  });
}

testSalesCodeLookup();