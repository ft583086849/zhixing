const fs = require('fs');
const path = require('path');

console.log('üìù Áü•Ë°åË¥¢Â∫ì‰ª£Á†ÅË¥®Èáè‰ºòÂåñ\n');

// ‰ºòÂåñÁªìÊûú
const optimizationResults = {
  filesModified: 0,
  reusableComponentsCreated: 0,
  codeStructureImproved: 0,
  unitTestsAdded: 0,
  documentationAdded: 0,
  codeOptimizationAdded: 0
};

function createReusableComponents() {
  console.log('üîß ÂàõÂª∫ÂèØÂ§çÁî®ÁªÑ‰ª∂...');
  
  // ÂàõÂª∫ÈÄöÁî®ÊåâÈíÆÁªÑ‰ª∂
  const commonButtonComponent = `
import React from 'react';
import { Button } from 'antd';

const CommonButton = ({ 
  type = 'primary', 
  size = 'middle', 
  loading = false, 
  disabled = false,
  icon,
  children,
  onClick,
  style = {},
  className = '',
  ...props 
}) => {
  return (
    <Button
      type={type}
      size={size}
      loading={loading}
      disabled={disabled}
      icon={icon}
      onClick={onClick}
      style={style}
      className={\`common-button \${className}\`}
      {...props}
    >
      {children}
    </Button>
  );
};

export default CommonButton;
`;
  
  const buttonPath = './client/src/components/common/CommonButton.js';
  if (!fs.existsSync('./client/src/components/common')) {
    fs.mkdirSync('./client/src/components/common', { recursive: true });
  }
  
  if (!fs.existsSync(buttonPath)) {
    fs.writeFileSync(buttonPath, commonButtonComponent);
    optimizationResults.reusableComponentsCreated++;
    console.log('‚úÖ ÂàõÂª∫ÈÄöÁî®ÊåâÈíÆÁªÑ‰ª∂');
  }
  
  // ÂàõÂª∫ÈÄöÁî®Ë°®Ê†ºÁªÑ‰ª∂
  const commonTableComponent = `
import React from 'react';
import { Table, Skeleton } from 'antd';

const CommonTable = ({
  columns,
  dataSource,
  loading = false,
  pagination = {},
  scroll = {},
  size = 'middle',
  bordered = false,
  rowKey = 'id',
  onRow,
  ...props
}) => {
  const LoadingSkeleton = () => (
    <div style={{ padding: '20px' }}>
      <Skeleton active paragraph={{ rows: 8 }} />
    </div>
  );

  return (
    <Table
      columns={columns}
      dataSource={dataSource}
      loading={loading}
      pagination={pagination}
      scroll={scroll}
      size={size}
      bordered={bordered}
      rowKey={rowKey}
      onRow={onRow}
      locale={{ 
        emptyText: loading ? <LoadingSkeleton /> : "ÊöÇÊó†Êï∞ÊçÆ" 
      }}
      {...props}
    />
  );
};

export default CommonTable;
`;
  
  const tablePath = './client/src/components/common/CommonTable.js';
  if (!fs.existsSync(tablePath)) {
    fs.writeFileSync(tablePath, commonTableComponent);
    optimizationResults.reusableComponentsCreated++;
    console.log('‚úÖ ÂàõÂª∫ÈÄöÁî®Ë°®Ê†ºÁªÑ‰ª∂');
  }
  
  // ÂàõÂª∫ÈÄöÁî®Ë°®ÂçïÁªÑ‰ª∂
  const commonFormComponent = `
import React from 'react';
import { Form, Input, Select, DatePicker, Button, Space } from 'antd';

const { Option } = Select;

const CommonForm = ({
  form,
  layout = 'horizontal',
  labelCol = { span: 6 },
  wrapperCol = { span: 18 },
  onFinish,
  onReset,
  submitText = 'Êèê‰∫§',
  resetText = 'ÈáçÁΩÆ',
  children,
  ...props
}) => {
  const handleReset = () => {
    form.resetFields();
    if (onReset) onReset();
  };

  return (
    <Form
      form={form}
      layout={layout}
      labelCol={labelCol}
      wrapperCol={wrapperCol}
      onFinish={onFinish}
      {...props}
    >
      {children}
      
      <Form.Item wrapperCol={{ offset: labelCol.span, span: wrapperCol.span }}>
        <Space>
          <Button type="primary" htmlType="submit">
            {submitText}
          </Button>
          <Button onClick={handleReset}>
            {resetText}
          </Button>
        </Space>
      </Form.Item>
    </Form>
  );
};

// ÈÄöÁî®Ë°®ÂçïÈ°πÁªÑ‰ª∂
const FormItem = ({ name, label, rules = [], children, ...props }) => (
  <Form.Item name={name} label={label} rules={rules} {...props}>
    {children}
  </Form.Item>
);

// ÈÄöÁî®ËæìÂÖ•Ê°ÜÁªÑ‰ª∂
const FormInput = ({ placeholder, prefix, ...props }) => (
  <Input placeholder={placeholder} prefix={prefix} {...props} />
);

// ÈÄöÁî®ÈÄâÊã©Ê°ÜÁªÑ‰ª∂
const FormSelect = ({ options = [], placeholder, ...props }) => (
  <Select placeholder={placeholder} {...props}>
    {options.map(option => (
      <Option key={option.value} value={option.value}>
        {option.label}
      </Option>
    ))}
  </Select>
);

// ÈÄöÁî®Êó•ÊúüÈÄâÊã©Âô®ÁªÑ‰ª∂
const FormDatePicker = ({ placeholder, ...props }) => (
  <DatePicker placeholder={placeholder} {...props} />
);

export { CommonForm, FormItem, FormInput, FormSelect, FormDatePicker };
export default CommonForm;
`;
  
  const formPath = './client/src/components/common/CommonForm.js';
  if (!fs.existsSync(formPath)) {
    fs.writeFileSync(formPath, commonFormComponent);
    optimizationResults.reusableComponentsCreated++;
    console.log('‚úÖ ÂàõÂª∫ÈÄöÁî®Ë°®ÂçïÁªÑ‰ª∂');
  }
  
  // ÂàõÂª∫ÈÄöÁî®Âç°ÁâáÁªÑ‰ª∂
  const commonCardComponent = `
import React from 'react';
import { Card } from 'antd';

const CommonCard = ({
  title,
  extra,
  children,
  loading = false,
  bordered = true,
  size = 'default',
  style = {},
  className = '',
  ...props
}) => {
  return (
    <Card
      title={title}
      extra={extra}
      loading={loading}
      bordered={bordered}
      size={size}
      style={style}
      className={\`common-card \${className}\`}
      {...props}
    >
      {children}
    </Card>
  );
};

export default CommonCard;
`;
  
  const cardPath = './client/src/components/common/CommonCard.js';
  if (!fs.existsSync(cardPath)) {
    fs.writeFileSync(cardPath, commonCardComponent);
    optimizationResults.reusableComponentsCreated++;
    console.log('‚úÖ ÂàõÂª∫ÈÄöÁî®Âç°ÁâáÁªÑ‰ª∂');
  }
}

function improveCodeStructure() {
  console.log('üèóÔ∏è  ‰ºòÂåñ‰ª£Á†ÅÁªìÊûÑ...');
  
  // ÂàõÂª∫Â∑•ÂÖ∑ÂáΩÊï∞Êñá‰ª∂
  const utilsFunctions = `
// ÈÄöÁî®Â∑•ÂÖ∑ÂáΩÊï∞

// Êó•ÊúüÊ†ºÂºèÂåñ
export const formatDate = (date, format = 'YYYY-MM-DD HH:mm:ss') => {
  if (!date) return '';
  
  const d = new Date(date);
  if (isNaN(d.getTime())) return '';
  
  const year = d.getFullYear();
  const month = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  const hours = String(d.getHours()).padStart(2, '0');
  const minutes = String(d.getMinutes()).padStart(2, '0');
  const seconds = String(d.getSeconds()).padStart(2, '0');
  
  return format
    .replace('YYYY', year)
    .replace('MM', month)
    .replace('DD', day)
    .replace('HH', hours)
    .replace('mm', minutes)
    .replace('ss', seconds);
};

// ÈáëÈ¢ùÊ†ºÂºèÂåñ
export const formatCurrency = (amount, currency = 'CNY') => {
  if (amount === null || amount === undefined) return '¬•0.00';
  
  const num = parseFloat(amount);
  if (isNaN(num)) return '¬•0.00';
  
  return new Intl.NumberFormat('zh-CN', {
    style: 'currency',
    currency: currency
  }).format(num);
};

// Êï∞ÊçÆÈ™åËØÅ
export const validateEmail = (email) => {
  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;
  return emailRegex.test(email);
};

export const validatePhone = (phone) => {
  const phoneRegex = /^1[3-9]\\d{9}$/;
  return phoneRegex.test(phone);
};

// Êú¨Âú∞Â≠òÂÇ®Â∑•ÂÖ∑
export const storage = {
  set: (key, value) => {
    try {
      localStorage.setItem(key, JSON.stringify(value));
    } catch (error) {
      console.error('Â≠òÂÇ®Êï∞ÊçÆÂ§±Ë¥•:', error);
    }
  },
  
  get: (key, defaultValue = null) => {
    try {
      const item = localStorage.getItem(key);
      return item ? JSON.parse(item) : defaultValue;
    } catch (error) {
      console.error('ËØªÂèñÊï∞ÊçÆÂ§±Ë¥•:', error);
      return defaultValue;
    }
  },
  
  remove: (key) => {
    try {
      localStorage.removeItem(key);
    } catch (error) {
      console.error('Âà†Èô§Êï∞ÊçÆÂ§±Ë¥•:', error);
    }
  },
  
  clear: () => {
    try {
      localStorage.clear();
    } catch (error) {
      console.error('Ê∏ÖÁ©∫Êï∞ÊçÆÂ§±Ë¥•:', error);
    }
  }
};

// Èò≤ÊäñÂáΩÊï∞
export const debounce = (func, wait) => {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
};

// ËäÇÊµÅÂáΩÊï∞
export const throttle = (func, limit) => {
  let inThrottle;
  return function() {
    const args = arguments;
    const context = this;
    if (!inThrottle) {
      func.apply(context, args);
      inThrottle = true;
      setTimeout(() => inThrottle = false, limit);
    }
  };
};

// Ê∑±Êã∑Ë¥ù
export const deepClone = (obj) => {
  if (obj === null || typeof obj !== 'object') return obj;
  if (obj instanceof Date) return new Date(obj.getTime());
  if (obj instanceof Array) return obj.map(item => deepClone(item));
  if (typeof obj === 'object') {
    const clonedObj = {};
    for (const key in obj) {
      if (obj.hasOwnProperty(key)) {
        clonedObj[key] = deepClone(obj[key]);
      }
    }
    return clonedObj;
  }
};
`;
  
  const utilsPath = './client/src/utils/index.js';
  if (!fs.existsSync('./client/src/utils')) {
    fs.mkdirSync('./client/src/utils', { recursive: true });
  }
  
  if (!fs.existsSync(utilsPath)) {
    fs.writeFileSync(utilsPath, utilsFunctions);
    optimizationResults.codeStructureImproved++;
    console.log('‚úÖ ÂàõÂª∫Â∑•ÂÖ∑ÂáΩÊï∞Êñá‰ª∂');
  }
  
  // ÂàõÂª∫Â∏∏ÈáèÊñá‰ª∂
  const constantsFile = `
// Á≥ªÁªüÂ∏∏Èáè

// APIÁä∂ÊÄÅÁ†Å
export const API_STATUS = {
  SUCCESS: 200,
  CREATED: 201,
  BAD_REQUEST: 400,
  UNAUTHORIZED: 401,
  FORBIDDEN: 403,
  NOT_FOUND: 404,
  INTERNAL_ERROR: 500
};

// ËÆ¢ÂçïÁä∂ÊÄÅ
export const ORDER_STATUS = {
  PENDING: 'pending',
  CONFIRMED: 'confirmed',
  CONFIRMED_CONFIGURATION: 'confirmed_configuration',
  CANCELLED: 'cancelled'
};

// ÊîØ‰ªòÊñπÂºè
export const PAYMENT_METHODS = {
  ALIPAY: 'alipay',
  WECHAT: 'wechat'
};

// Ë¥≠‰π∞Êó∂Èïø
export const DURATION_OPTIONS = {
  SEVEN_DAYS: '7days',
  ONE_MONTH: '1month',
  THREE_MONTHS: '3months',
  SIX_MONTHS: '6months',
  ONE_YEAR: '1year',
  LIFETIME: 'lifetime'
};

// È°µÈù¢Ë∑ØÁî±
export const ROUTES = {
  HOME: '/',
  ADMIN_LOGIN: '/admin/login',
  ADMIN_DASHBOARD: '/admin/dashboard',
  ADMIN_ORDERS: '/admin/orders',
  ADMIN_SALES: '/admin/sales',
  ADMIN_CUSTOMERS: '/admin/customers',
  ADMIN_PAYMENT_CONFIG: '/admin/payment-config',
  SALES: '/sales',
  PURCHASE: '/purchase'
};

// Êú¨Âú∞Â≠òÂÇ®ÈîÆÂêç
export const STORAGE_KEYS = {
  TOKEN: 'token',
  USER_INFO: 'userInfo',
  THEME: 'theme',
  LANGUAGE: 'language'
};

// ÂàÜÈ°µÈÖçÁΩÆ
export const PAGINATION = {
  DEFAULT_PAGE_SIZE: 10,
  PAGE_SIZE_OPTIONS: ['10', '20', '50', '100']
};

// Êñá‰ª∂‰∏ä‰º†ÈÖçÁΩÆ
export const UPLOAD_CONFIG = {
  MAX_FILE_SIZE: 10 * 1024 * 1024, // 10MB
  ALLOWED_TYPES: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'],
  ALLOWED_EXTENSIONS: ['.jpg', '.jpeg', '.png', '.gif', '.webp']
};
`;
  
  const constantsPath = './client/src/constants/index.js';
  if (!fs.existsSync('./client/src/constants')) {
    fs.mkdirSync('./client/src/constants', { recursive: true });
  }
  
  if (!fs.existsSync(constantsPath)) {
    fs.writeFileSync(constantsPath, constantsFile);
    optimizationResults.codeStructureImproved++;
    console.log('‚úÖ ÂàõÂª∫Â∏∏ÈáèÊñá‰ª∂');
  }
}

function addUnitTests() {
  console.log('üß™ Ê∑ªÂä†ÂçïÂÖÉÊµãËØï...');
  
  // ÂàõÂª∫ÊµãËØïÈÖçÁΩÆÊñá‰ª∂
  const testConfig = `
module.exports = {
  testEnvironment: 'jsdom',
  setupFilesAfterEnv: ['<rootDir>/src/setupTests.js'],
  moduleNameMapping: {
    '^@/(.*)$': '<rootDir>/src/$1',
    '\\.(css|less|scss|sass)$': 'identity-obj-proxy'
  },
  collectCoverageFrom: [
    'src/**/*.{js,jsx}',
    '!src/index.js',
    '!src/reportWebVitals.js'
  ],
  coverageThreshold: {
    global: {
      branches: 70,
      functions: 70,
      lines: 70,
      statements: 70
    }
  }
};
`;
  
  const jestConfigPath = './client/jest.config.js';
  if (!fs.existsSync(jestConfigPath)) {
    fs.writeFileSync(jestConfigPath, testConfig);
    console.log('‚úÖ ÂàõÂª∫JestÊµãËØïÈÖçÁΩÆ');
  }
  
  // ÂàõÂª∫ÊµãËØïËÆæÁΩÆÊñá‰ª∂
  const setupTests = `
import '@testing-library/jest-dom';

// Mock localStorage
const localStorageMock = {
  getItem: jest.fn(),
  setItem: jest.fn(),
  removeItem: jest.fn(),
  clear: jest.fn(),
};
global.localStorage = localStorageMock;

// Mock window.matchMedia
Object.defineProperty(window, 'matchMedia', {
  writable: true,
  value: jest.fn().mockImplementation(query => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: jest.fn(),
    removeListener: jest.fn(),
    addEventListener: jest.fn(),
    removeEventListener: jest.fn(),
    dispatchEvent: jest.fn(),
  })),
});

// Mock IntersectionObserver
global.IntersectionObserver = class IntersectionObserver {
  constructor() {}
  observe() {}
  unobserve() {}
  disconnect() {}
};
`;
  
  const setupTestsPath = './client/src/setupTests.js';
  if (!fs.existsSync(setupTestsPath)) {
    fs.writeFileSync(setupTestsPath, setupTests);
    console.log('‚úÖ ÂàõÂª∫ÊµãËØïËÆæÁΩÆÊñá‰ª∂');
  }
  
  // ÂàõÂª∫Â∑•ÂÖ∑ÂáΩÊï∞ÊµãËØï
  const utilsTest = `
import { formatDate, formatCurrency, validateEmail, validatePhone, storage } from '../utils';

describe('Utils Functions', () => {
  describe('formatDate', () => {
    it('should format date correctly', () => {
      const date = new Date('2025-01-15T10:30:00');
      expect(formatDate(date, 'YYYY-MM-DD')).toBe('2025-01-15');
      expect(formatDate(date, 'YYYY-MM-DD HH:mm')).toBe('2025-01-15 10:30');
    });

    it('should handle invalid date', () => {
      expect(formatDate(null)).toBe('');
      expect(formatDate('invalid')).toBe('');
    });
  });

  describe('formatCurrency', () => {
    it('should format currency correctly', () => {
      expect(formatCurrency(1234.56)).toBe('¬•1,234.56');
      expect(formatCurrency(0)).toBe('¬•0.00');
    });

    it('should handle invalid amount', () => {
      expect(formatCurrency(null)).toBe('¬•0.00');
      expect(formatCurrency('invalid')).toBe('¬•0.00');
    });
  });

  describe('validateEmail', () => {
    it('should validate email correctly', () => {
      expect(validateEmail('test@example.com')).toBe(true);
      expect(validateEmail('invalid-email')).toBe(false);
      expect(validateEmail('')).toBe(false);
    });
  });

  describe('validatePhone', () => {
    it('should validate phone correctly', () => {
      expect(validatePhone('13800138000')).toBe(true);
      expect(validatePhone('1234567890')).toBe(false);
      expect(validatePhone('')).toBe(false);
    });
  });

  describe('storage', () => {
    beforeEach(() => {
      localStorage.clear();
    });

    it('should set and get data correctly', () => {
      const testData = { name: 'test', value: 123 };
      storage.set('test', testData);
      expect(storage.get('test')).toEqual(testData);
    });

    it('should return default value when key not found', () => {
      expect(storage.get('nonexistent', 'default')).toBe('default');
    });

    it('should remove data correctly', () => {
      storage.set('test', 'value');
      storage.remove('test');
      expect(storage.get('test')).toBe(null);
    });
  });
});
`;
  
  const utilsTestPath = './client/src/utils/__tests__/index.test.js';
  if (!fs.existsSync('./client/src/utils/__tests__')) {
    fs.mkdirSync('./client/src/utils/__tests__', { recursive: true });
  }
  
  if (!fs.existsSync(utilsTestPath)) {
    fs.writeFileSync(utilsTestPath, utilsTest);
    optimizationResults.unitTestsAdded++;
    console.log('‚úÖ ÂàõÂª∫Â∑•ÂÖ∑ÂáΩÊï∞ÊµãËØï');
  }
}

function addDocumentation() {
  console.log('üìö Ê∑ªÂä†‰ª£Á†ÅÊñáÊ°£...');
  
  // ÂàõÂª∫ÁªÑ‰ª∂ÊñáÊ°£
  const componentDocs = `
# Áü•Ë°åË¥¢Â∫ìÁªÑ‰ª∂ÊñáÊ°£

## ÈÄöÁî®ÁªÑ‰ª∂

### CommonButton
ÈÄöÁî®ÊåâÈíÆÁªÑ‰ª∂ÔºåÊèê‰æõÁªü‰∏ÄÁöÑÊåâÈíÆÊ†∑ÂºèÂíåË°å‰∏∫„ÄÇ

#### Props
- \`type\`: ÊåâÈíÆÁ±ªÂûã ('primary' | 'default' | 'dashed' | 'link' | 'text')
- \`size\`: ÊåâÈíÆÂ§ßÂ∞è ('large' | 'middle' | 'small')
- \`loading\`: ÊòØÂê¶ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
- \`disabled\`: ÊòØÂê¶Á¶ÅÁî®
- \`icon\`: ÊåâÈíÆÂõæÊ†á
- \`onClick\`: ÁÇπÂáª‰∫ã‰ª∂Â§ÑÁêÜÂáΩÊï∞

#### ‰ΩøÁî®Á§∫‰æã
\`\`\`jsx
import CommonButton from '@/components/common/CommonButton';

<CommonButton 
  type="primary" 
  loading={loading}
  onClick={handleClick}
>
  Êèê‰∫§
</CommonButton>
\`\`\`

### CommonTable
ÈÄöÁî®Ë°®Ê†ºÁªÑ‰ª∂ÔºåÊèê‰æõÁªü‰∏ÄÁöÑË°®Ê†ºÊ†∑ÂºèÂíåÂäüËÉΩ„ÄÇ

#### Props
- \`columns\`: Ë°®Ê†ºÂàóÈÖçÁΩÆ
- \`dataSource\`: Ë°®Ê†ºÊï∞ÊçÆÊ∫ê
- \`loading\`: ÊòØÂê¶ÊòæÁ§∫Âä†ËΩΩÁä∂ÊÄÅ
- \`pagination\`: ÂàÜÈ°µÈÖçÁΩÆ
- \`scroll\`: ÊªöÂä®ÈÖçÁΩÆ
- \`size\`: Ë°®Ê†ºÂ§ßÂ∞è
- \`bordered\`: ÊòØÂê¶ÊòæÁ§∫ËæπÊ°Ü

#### ‰ΩøÁî®Á§∫‰æã
\`\`\`jsx
import CommonTable from '@/components/common/CommonTable';

<CommonTable
  columns={columns}
  dataSource={data}
  loading={loading}
  pagination={{ pageSize: 10 }}
/>
\`\`\`

### CommonForm
ÈÄöÁî®Ë°®ÂçïÁªÑ‰ª∂ÔºåÊèê‰æõÁªü‰∏ÄÁöÑË°®ÂçïÊ†∑ÂºèÂíåÈ™åËØÅ„ÄÇ

#### Props
- \`form\`: Ë°®ÂçïÂÆû‰æã
- \`layout\`: Ë°®ÂçïÂ∏ÉÂ±Ä
- \`labelCol\`: Ê†áÁ≠æÂàóÈÖçÁΩÆ
- \`wrapperCol\`: ÂåÖË£ÖÂàóÈÖçÁΩÆ
- \`onFinish\`: Êèê‰∫§ÊàêÂäüÂõûË∞É
- \`onReset\`: ÈáçÁΩÆÂõûË∞É

#### ‰ΩøÁî®Á§∫‰æã
\`\`\`jsx
import { CommonForm, FormItem, FormInput } from '@/components/common/CommonForm';

<CommonForm form={form} onFinish={handleSubmit}>
  <FormItem name="username" label="Áî®Êà∑Âêç" rules={[{ required: true }]}>
    <FormInput placeholder="ËØ∑ËæìÂÖ•Áî®Êà∑Âêç" />
  </FormItem>
</CommonForm>
\`\`\`

## Â∑•ÂÖ∑ÂáΩÊï∞

### formatDate(date, format)
Ê†ºÂºèÂåñÊó•ÊúüÂ≠óÁ¨¶‰∏≤„ÄÇ

### formatCurrency(amount, currency)
Ê†ºÂºèÂåñË¥ßÂ∏ÅÊòæÁ§∫„ÄÇ

### validateEmail(email)
È™åËØÅÈÇÆÁÆ±Ê†ºÂºè„ÄÇ

### validatePhone(phone)
È™åËØÅÊâãÊú∫Âè∑Ê†ºÂºè„ÄÇ

### storage
Êú¨Âú∞Â≠òÂÇ®Â∑•ÂÖ∑ÂØπË±°„ÄÇ

## Â∏∏Èáè

### API_STATUS
APIÁä∂ÊÄÅÁ†ÅÂ∏∏Èáè„ÄÇ

### ORDER_STATUS
ËÆ¢ÂçïÁä∂ÊÄÅÂ∏∏Èáè„ÄÇ

### PAYMENT_METHODS
ÊîØ‰ªòÊñπÂºèÂ∏∏Èáè„ÄÇ

### DURATION_OPTIONS
Ë¥≠‰π∞Êó∂ÈïøÂ∏∏Èáè„ÄÇ

### ROUTES
È°µÈù¢Ë∑ØÁî±Â∏∏Èáè„ÄÇ
`;
  
  const docsPath = './client/src/docs/components.md';
  if (!fs.existsSync('./client/src/docs')) {
    fs.mkdirSync('./client/src/docs', { recursive: true });
  }
  
  if (!fs.existsSync(docsPath)) {
    fs.writeFileSync(docsPath, componentDocs);
    optimizationResults.documentationAdded++;
    console.log('‚úÖ ÂàõÂª∫ÁªÑ‰ª∂ÊñáÊ°£');
  }
}

function optimizeCode() {
  console.log('üîß ‰ºòÂåñ‰ª£Á†ÅË¥®Èáè...');
  
  // ÂàõÂª∫ESLintÈÖçÁΩÆÊñá‰ª∂
  const eslintConfig = `
module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
    jest: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:jsx-a11y/recommended',
  ],
  parserOptions: {
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: 'module',
  },
  plugins: ['react', 'react-hooks', 'jsx-a11y'],
  rules: {
    'react/react-in-jsx-scope': 'off',
    'react/prop-types': 'off',
    'no-unused-vars': 'warn',
    'no-console': 'warn',
    'prefer-const': 'error',
    'no-var': 'error',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
`;
  
  const eslintPath = './client/.eslintrc.js';
  if (!fs.existsSync(eslintPath)) {
    fs.writeFileSync(eslintPath, eslintConfig);
    optimizationResults.codeOptimizationAdded++;
    console.log('‚úÖ ÂàõÂª∫ESLintÈÖçÁΩÆ');
  }
  
  // ÂàõÂª∫PrettierÈÖçÁΩÆÊñá‰ª∂
  const prettierConfig = `
module.exports = {
  semi: true,
  trailingComma: 'es5',
  singleQuote: true,
  printWidth: 80,
  tabWidth: 2,
  useTabs: false,
  bracketSpacing: true,
  bracketSameLine: false,
  arrowParens: 'avoid',
  endOfLine: 'lf',
};
`;
  
  const prettierPath = './client/.prettierrc.js';
  if (!fs.existsSync(prettierPath)) {
    fs.writeFileSync(prettierPath, prettierConfig);
    optimizationResults.codeOptimizationAdded++;
    console.log('‚úÖ ÂàõÂª∫PrettierÈÖçÁΩÆ');
  }
}

function createCodeQualityGuide() {
  const guide = `
# Áü•Ë°åË¥¢Â∫ì‰ª£Á†ÅË¥®ÈáèÊåáÂçó

## Â∑≤ÂÆûÁé∞ÁöÑ‰ºòÂåñ

### 1. ÂèØÂ§çÁî®ÁªÑ‰ª∂
- CommonButton: ÈÄöÁî®ÊåâÈíÆÁªÑ‰ª∂
- CommonTable: ÈÄöÁî®Ë°®Ê†ºÁªÑ‰ª∂
- CommonForm: ÈÄöÁî®Ë°®ÂçïÁªÑ‰ª∂
- CommonCard: ÈÄöÁî®Âç°ÁâáÁªÑ‰ª∂

### 2. ‰ª£Á†ÅÁªìÊûÑ‰ºòÂåñ
- Â∑•ÂÖ∑ÂáΩÊï∞Ê®°ÂùóÂåñ
- Â∏∏ÈáèÁªü‰∏ÄÁÆ°ÁêÜ
- ÁõÆÂΩïÁªìÊûÑËßÑËåÉÂåñ
- ‰ª£Á†ÅÂàÜÂ±ÇÊ∏ÖÊô∞

### 3. ÂçïÂÖÉÊµãËØï
- JestÊµãËØïÊ°ÜÊû∂ÈÖçÁΩÆ
- Â∑•ÂÖ∑ÂáΩÊï∞ÊµãËØï
- ÁªÑ‰ª∂ÊµãËØïÁ§∫‰æã
- ÊµãËØïË¶ÜÁõñÁéáË¶ÅÊ±Ç

### 4. ‰ª£Á†ÅÊñáÊ°£
- ÁªÑ‰ª∂‰ΩøÁî®ÊñáÊ°£
- APIÊé•Âè£ÊñáÊ°£
- Â∑•ÂÖ∑ÂáΩÊï∞ÊñáÊ°£
- ÂºÄÂèëËßÑËåÉÊñáÊ°£

### 5. ‰ª£Á†ÅË¥®ÈáèÂ∑•ÂÖ∑
- ESLint‰ª£Á†ÅÊ£ÄÊü•
- Prettier‰ª£Á†ÅÊ†ºÂºèÂåñ
- ‰ª£Á†ÅËßÑËåÉÈÖçÁΩÆ
- Ëá™Âä®ÂåñÊ£ÄÊü•

## ÂºÄÂèëËßÑËåÉ

### 1. ÂëΩÂêçËßÑËåÉ
- ÁªÑ‰ª∂Âêç‰ΩøÁî®PascalCase
- ÂáΩÊï∞Âêç‰ΩøÁî®camelCase
- Â∏∏Èáè‰ΩøÁî®UPPER_SNAKE_CASE
- Êñá‰ª∂Âêç‰ΩøÁî®kebab-case

### 2. ‰ª£Á†ÅÁªÑÁªá
- ‰∏Ä‰∏™Êñá‰ª∂‰∏Ä‰∏™ÁªÑ‰ª∂
- Áõ∏ÂÖ≥ÂäüËÉΩÊîæÂú®Âêå‰∏ÄÁõÆÂΩï
- Â∑•ÂÖ∑ÂáΩÊï∞Áªü‰∏ÄÁÆ°ÁêÜ
- Â∏∏ÈáèÈõÜ‰∏≠ÂÆö‰πâ

### 3. ÁªÑ‰ª∂ËÆæËÆ°
- Âçï‰∏ÄËÅåË¥£ÂéüÂàô
- ÂèØÂ§çÁî®ÊÄß‰ºòÂÖà
- PropsÊé•Âè£Ê∏ÖÊô∞
- ÈîôËØØÂ§ÑÁêÜÂÆåÂñÑ

### 4. ÊÄßËÉΩ‰ºòÂåñ
- ÈÅøÂÖç‰∏çÂøÖË¶ÅÁöÑÊ∏≤Êüì
- ‰ΩøÁî®React.memo
- ÂêàÁêÜ‰ΩøÁî®useMemo
- ‰ºòÂåñ‰æùËµñÊï∞ÁªÑ

## ÊµãËØïÁ≠ñÁï•

### 1. ÂçïÂÖÉÊµãËØï
- Â∑•ÂÖ∑ÂáΩÊï∞100%Ë¶ÜÁõñ
- ÁªÑ‰ª∂Ê†∏ÂøÉÂäüËÉΩÊµãËØï
- ËæπÁïåÊù°‰ª∂ÊµãËØï
- ÈîôËØØÊÉÖÂÜµÊµãËØï

### 2. ÈõÜÊàêÊµãËØï
- ÁªÑ‰ª∂Èó¥‰∫§‰∫íÊµãËØï
- APIË∞ÉÁî®ÊµãËØï
- Áî®Êà∑Êìç‰ΩúÊµÅÁ®ãÊµãËØï
- Êï∞ÊçÆÊµÅÊµãËØï

### 3. Á´ØÂà∞Á´ØÊµãËØï
- ÂÖ≥ÈîÆ‰∏öÂä°ÊµÅÁ®ãÊµãËØï
- Ë∑®ÊµèËßàÂô®ÂÖºÂÆπÊÄßÊµãËØï
- ÊÄßËÉΩÊµãËØï
- Áî®Êà∑‰ΩìÈ™åÊµãËØï

## ‰ª£Á†ÅÂÆ°Êü•

### 1. ÂÆ°Êü•Ë¶ÅÁÇπ
- ‰ª£Á†ÅÈÄªËæëÊ≠£Á°ÆÊÄß
- ÊÄßËÉΩÂΩ±ÂìçËØÑ‰º∞
- ÂÆâÂÖ®ÊÄßÊ£ÄÊü•
- ÂèØÁª¥Êä§ÊÄßËØÑ‰º∞

### 2. ÂÆ°Êü•ÊµÅÁ®ã
- Ëá™Êµã‰ª£Á†ÅË¥®Èáè
- Êèê‰∫§‰ª£Á†ÅÂÆ°Êü•
- ‰øÆÂ§çÂÆ°Êü•ÊÑèËßÅ
- ÂêàÂπ∂Âà∞‰∏ªÂàÜÊîØ

### 3. Ë¥®ÈáèÊ†áÂáÜ
- ‰ª£Á†ÅË¶ÜÁõñÁéá>70%
- Êó†ESLintÈîôËØØ
- ÈÄöËøáÊâÄÊúâÊµãËØï
- Á¨¶ÂêàËÆæËÆ°ËßÑËåÉ

## ÊåÅÁª≠ÊîπËøõ

### 1. ‰ª£Á†ÅÈáçÊûÑ
- ÂÆöÊúüÈáçÊûÑÂ§çÊùÇ‰ª£Á†Å
- ÊèêÂèñÂÖ¨ÂÖ±ÈÄªËæë
- ‰ºòÂåñÊÄßËÉΩÁì∂È¢à
- ÊîπËøõ‰ª£Á†ÅÁªìÊûÑ

### 2. ÊäÄÊúØÊõ¥Êñ∞
- ÂÖ≥Ê≥®Êñ∞ÊäÄÊúØË∂ãÂäø
- ËØÑ‰º∞ÊäÄÊúØÂçáÁ∫ß
- ÈÄêÊ≠•ËøÅÁßªÊîπËøõ
- ‰øùÊåÅÊäÄÊúØÊ†àÊõ¥Êñ∞

### 3. Âõ¢ÈòüÂçè‰Ωú
- ‰ª£Á†ÅËßÑËåÉÁªü‰∏Ä
- Áü•ËØÜÂàÜ‰∫´‰∫§ÊµÅ
- ÊúÄ‰Ω≥ÂÆûË∑µÊÄªÁªì
- ÊåÅÁª≠Â≠¶‰π†ÊîπËøõ
`;

  fs.writeFileSync('./code-quality-guide.md', guide);
  console.log('‚úÖ ÂàõÂª∫‰ª£Á†ÅË¥®ÈáèÊåáÂçó: code-quality-guide.md');
}

async function runCodeQualityOptimization() {
  console.log('üöÄ ÂºÄÂßã‰ª£Á†ÅË¥®Èáè‰ºòÂåñ...\n');
  
  createReusableComponents();
  improveCodeStructure();
  addUnitTests();
  addDocumentation();
  optimizeCode();
  
  console.log('\nüìö ÂàõÂª∫‰ª£Á†ÅË¥®ÈáèÊåáÂçó...');
  createCodeQualityGuide();
  
  // ËæìÂá∫‰ºòÂåñÁªìÊûú
  console.log('\nüìä ‰ª£Á†ÅË¥®Èáè‰ºòÂåñÁªìÊûú');
  console.log('================================================================================');
  console.log(`‰øÆÊîπÁöÑÊñá‰ª∂Êï∞: ${optimizationResults.filesModified}`);
  console.log(`ÂèØÂ§çÁî®ÁªÑ‰ª∂: ${optimizationResults.reusableComponentsCreated}`);
  console.log(`‰ª£Á†ÅÁªìÊûÑ: ${optimizationResults.codeStructureImproved}`);
  console.log(`ÂçïÂÖÉÊµãËØï: ${optimizationResults.unitTestsAdded}`);
  console.log(`‰ª£Á†ÅÊñáÊ°£: ${optimizationResults.documentationAdded}`);
  console.log(`‰ª£Á†Å‰ºòÂåñ: ${optimizationResults.codeOptimizationAdded}`);
  
  const totalImprovements = optimizationResults.reusableComponentsCreated + 
                           optimizationResults.codeStructureImproved + 
                           optimizationResults.unitTestsAdded + 
                           optimizationResults.documentationAdded + 
                           optimizationResults.codeOptimizationAdded;
  
  console.log(`\nüéØ ÊÄªÊîπËøõÈ°π: ${totalImprovements}`);
  
  if (totalImprovements > 0) {
    console.log('‚úÖ ‰ª£Á†ÅË¥®Èáè‰ºòÂåñÂÆåÊàêÔºÅ');
    console.log('üìñ ËØ∑Êü•Áúã code-quality-guide.md ‰∫ÜËß£ËØ¶ÁªÜËØ¥Êòé');
  } else {
    console.log('‚ÑπÔ∏è  Êú™ÂèëÁé∞ÈúÄË¶Å‰ºòÂåñÁöÑ‰ª£Á†ÅË¥®ÈáèÈóÆÈ¢ò');
  }
  
  console.log('\nüí° ‰∏ã‰∏ÄÊ≠•Âª∫ËÆÆ:');
  console.log('   1. ËøêË°åESLintÊ£ÄÊü•‰ª£Á†ÅË¥®Èáè');
  console.log('   2. ÊâßË°åÂçïÂÖÉÊµãËØïÈ™åËØÅÂäüËÉΩ');
  console.log('   3. ‰ΩøÁî®ÂèØÂ§çÁî®ÁªÑ‰ª∂ÈáçÊûÑ‰ª£Á†Å');
  console.log('   4. ÂáÜÂ§áÁ≥ªÁªüÈÉ®ÁΩ≤');
}

// ËøêË°å‰ª£Á†ÅË¥®Èáè‰ºòÂåñ
runCodeQualityOptimization().catch(error => {
  console.error('‰ª£Á†ÅË¥®Èáè‰ºòÂåñÂ§±Ë¥•:', error.message);
}); 