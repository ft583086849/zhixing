{"version":3,"file":"static/js/784.ebbbdae4.chunk.js","mappings":"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","sources":["pages/UnifiedSecondarySalesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { \n  Card, \n  Form, \n  Input, \n  Select, \n  Button, \n  message, \n  Typography, \n  Divider,\n  Alert,\n  Space\n} from 'antd';\nimport { \n  UserOutlined, \n  WalletOutlined, \n  LinkOutlined,\n  CopyOutlined \n} from '@ant-design/icons';\nimport axios from 'axios';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst UnifiedSecondarySalesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [form] = Form.useForm();\n\n  // 基础状态 - 完全模仿SalesPage\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [createdLinks, setCreatedLinks] = useState(null);\n  const [paymentMethod, setPaymentMethod] = useState('');\n\n  // 关联注册相关状态\n  const [registrationCode, setRegistrationCode] = useState('');\n  const [registrationData, setRegistrationData] = useState(null);\n  const [isLinkedMode, setIsLinkedMode] = useState(false);\n  const [validationStep, setValidationStep] = useState('loading'); // 'loading', 'invalid', 'valid'\n\n  // 设置页面标题 - 改为\"销售注册\"\n  useEffect(() => {\n    document.title = '销售注册';\n  }, []);\n\n  // 检查是否为关联模式并验证代码\n  useEffect(() => {\n    const salesCode = searchParams.get('sales_code');\n    if (salesCode) {\n      setIsLinkedMode(true);\n      setRegistrationCode(salesCode);\n      validateRegistrationCode(salesCode);\n    } else {\n      setIsLinkedMode(false);\n      setValidationStep('valid'); // 独立模式直接通过验证\n    }\n  }, [searchParams]);\n\n  const validateRegistrationCode = async (code) => {\n    try {\n      setLoading(true);\n      setValidationStep('loading');\n      \n      const response = await axios.get(`/api/secondary-sales?path=validate&link_code=${code}&link_type=secondary_registration`);\n      \n      if (response.data.success) {\n        setRegistrationData(response.data.data);\n        setValidationStep('valid');\n      } else {\n        setError('注册码无效或已过期');\n        setValidationStep('invalid');\n      }\n    } catch (error) {\n      console.error('验证注册码失败:', error);\n      setError('注册码验证失败');\n      setValidationStep('invalid');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 完全模仿SalesPage的handleSubmit结构\n  const handleSubmit = async (values) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      let response;\n      if (isLinkedMode) {\n        // 关联模式 - 注册到一级销售下\n        response = await axios.post('/api/secondary-sales?path=register', {\n          ...values,\n          registration_code: registrationCode,\n          primary_sales_id: registrationData?.primary_sales_id\n        });\n      } else {\n        // 独立模式 - 独立注册\n        response = await axios.post('/api/secondary-sales?path=register-independent', values);\n      }\n\n      if (response.data.success) {\n        const salesData = response.data.data;\n        // 设置生成的链接（只包含用户购买链接）\n        setCreatedLinks({\n          user_sales_link: salesData.user_sales_link,\n          user_sales_code: salesData.sales_code,\n        });\n        message.success('销售收款信息创建成功！');\n        form.resetFields();\n      } else {\n        setError(response.data.message || '创建失败');\n      }\n    } catch (error) {\n      console.error('创建失败:', error);\n      setError(error.response?.data?.message || '创建失败，请稍后重试');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 完全模仿SalesPage的复制函数\n  const handleCopyUserLink = async () => {\n    if (createdLinks?.user_sales_link) {\n      try {\n        await navigator.clipboard.writeText(createdLinks.user_sales_link);\n        message.success('用户购买链接已复制到剪贴板');\n      } catch (err) {\n        message.error('复制失败');\n      }\n    }\n  };\n\n  const handleCopyUserCode = async () => {\n    if (createdLinks?.user_sales_code) {\n      try {\n        await navigator.clipboard.writeText(createdLinks.user_sales_code);\n        message.success('用户购买代码已复制到剪贴板');\n      } catch (err) {\n        message.error('复制失败');\n      }\n    }\n  };\n\n  // 用户购买代码复制功能\n\n  // 完全模仿SalesPage的clearLink函数\n  const clearLink = () => {\n    setCreatedLinks(null);\n    setError(null);\n  };\n\n  // 关联模式验证失败时的显示\n  if (isLinkedMode && validationStep === 'invalid') {\n    return (\n      <div className=\"page-container\">\n        <div className=\"content-container\">\n          <Card className=\"card-container\" role=\"region\">\n            <Title level={2} style={{ textAlign: 'center', marginBottom: 32 }}>\n              销售注册\n            </Title>\n            \n            <Alert\n              message=\"注册码无效\"\n              description=\"您提供的注册码无效或已过期，请联系一级销售获取新的注册码。\"\n              type=\"error\"\n              showIcon\n              style={{ textAlign: 'center' }}\n            />\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  // 关联模式验证中时的显示\n  if (isLinkedMode && validationStep === 'loading') {\n    return (\n      <div className=\"page-container\">\n        <div className=\"content-container\">\n          <Card className=\"card-container\" role=\"region\">\n            <Title level={2} style={{ textAlign: 'center', marginBottom: 32 }}>\n              销售注册\n            </Title>\n            \n            <div style={{ textAlign: 'center', padding: '50px 0' }}>\n              <div>正在验证注册码...</div>\n            </div>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  // 主页面 - 完全模仿SalesPage的结构\n  return (\n    <div className=\"page-container\">\n      <div className=\"content-container\">\n        <Card className=\"card-container\" role=\"region\">\n          <Title level={2} style={{ textAlign: 'center', marginBottom: 32 }}>\n            销售注册\n          </Title>\n\n\n\n          <Form\n            form={form}\n            layout=\"vertical\"\n            onFinish={handleSubmit}\n            className=\"form-container\"\n           >\n            {/* 微信号 - 完全相同 */}\n            <Form.Item\n              name=\"wechat_name\"\n              label=\"微信号\"\n              rules={[{ required: true, message: '请输入微信号' }]}\n             >\n              <Input \n                prefix={<UserOutlined />} \n                placeholder=\"请输入微信号\"\n                size=\"large\"\n              />\n            </Form.Item>\n\n            {/* 收款方式 - 完全相同 */}\n            <Form.Item\n              name=\"payment_method\"\n              label=\"收款方式\"\n              rules={[{ required: true, message: '请选择收款方式' }]}\n             >\n              <Select\n                placeholder=\"请选择收款方式\"\n                size=\"large\"\n                onChange={(value) => setPaymentMethod(value)}\n                aria-label=\"请选择收款方式\"\n              >\n                <Option value=\"alipay\">支付宝</Option>\n                <Option value=\"crypto\">线上地址码</Option>\n              </Select>\n            </Form.Item>\n\n            {/* 支付宝收款信息 - 完全相同 */}\n            {paymentMethod === 'alipay' && (\n              <>\n                <Form.Item\n                  name=\"payment_address\"\n                  label=\"支付宝账号\"\n                  rules={[{ required: true, message: '请输入支付宝账号' }]}\n                 >\n                  <Input \n                    prefix={<WalletOutlined />} \n                    placeholder=\"请输入支付宝账号\"\n                    size=\"large\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"alipay_surname\"\n                  label=\"收款人姓氏\"\n                  rules={[{ required: true, message: '请输入收款人姓氏' }]}\n                 >\n                  <Input \n                    placeholder=\"请输入收款人姓氏\"\n                    size=\"large\"\n                    aria-label=\"请输入收款人姓氏\"\n                  />\n                </Form.Item>\n              </>\n            )}\n\n            {/* 线上地址码收款信息 - 完全相同 */}\n            {paymentMethod === 'crypto' && (\n              <>\n                <Form.Item\n                  name=\"chain_name\"\n                  label=\"链名\"\n                  rules={[{ required: true, message: '请输入链名' }]}\n                 >\n                  <Input \n                    placeholder=\"例如：TRC10/TRC20\"\n                    size=\"large\"\n                    aria-label=\"例如：TRC10/TRC20\"\n                  />\n                </Form.Item>\n                <Form.Item\n                  name=\"payment_address\"\n                  label=\"收款地址\"\n                  rules={[{ required: true, message: '请输入收款地址' }]}\n                 >\n                  <Input.TextArea \n                    placeholder=\"请输入收款地址\"\n                    rows={3}\n                    size=\"large\"\n                    aria-label=\"请输入收款地址\"\n                  />\n                </Form.Item>\n              </>\n            )}\n\n            {/* 提交按钮 - 完全相同 */}\n            <Form.Item >\n              <Button \n                type=\"primary\" \n                htmlType=\"submit\" \n                loading={loading}\n                size=\"large\"\n                block\n               tabIndex={0}>\n                生成收款链接\n              </Button>\n            </Form.Item>\n          </Form>\n\n          {/* 错误提示 - 完全相同 */}\n          {error && (\n            <Alert\n              message=\"错误\"\n              description={error}\n              type=\"error\"\n              showIcon\n              style={{ marginTop: 16 }}\n            />\n          )}\n\n          {/* 生成的链接 */}\n          {createdLinks && (\n            <div style={{ marginTop: 32 }}>\n              <Divider>生成的收款链接</Divider>\n              \n              <Space direction=\"vertical\" style={{ width: '100%' }} size=\"large\">\n                {/* 用户购买链接 - 完全相同 */}\n                <Card \n                  title=\"💰 用户购买链接\" \n                  style={{ backgroundColor: '#f6ffed', borderColor: '#b7eb8f' }} \n                  role=\"region\"\n                >\n                  <Space direction=\"vertical\" style={{ width: '100%' }}>\n                    <div>\n                      <Text strong>用户购买链接：</Text>\n                      <div style={{ \n                        wordBreak: 'break-all', \n                        backgroundColor: 'white',\n                        padding: '8px',\n                        borderRadius: '4px',\n                        marginTop: '4px',\n                        border: '1px solid #d9d9d9'\n                      }}>\n                        {createdLinks.user_sales_link}\n                      </div>\n                      <Button \n                        type=\"link\" \n                        icon={<CopyOutlined />}\n                        onClick={handleCopyUserLink}\n                        style={{ padding: 0, marginTop: '4px' }}\n                        tabIndex={0}\n                      >\n                        复制用户购买链接\n                      </Button>\n                    </div>\n\n                    <div>\n                      <Text strong>用户购买代码：</Text>\n                      <div style={{ \n                        wordBreak: 'break-all', \n                        backgroundColor: 'white',\n                        padding: '8px',\n                        borderRadius: '4px',\n                        marginTop: '4px',\n                        border: '1px solid #d9d9d9'\n                      }}>\n                        {createdLinks.user_sales_code}\n                      </div>\n                      <Button \n                        type=\"link\" \n                        icon={<CopyOutlined />}\n                        onClick={handleCopyUserCode}\n                        style={{ padding: 0, marginTop: '4px' }}\n                        tabIndex={0}\n                      >\n                        复制用户购买代码\n                      </Button>\n                    </div>\n                  </Space>\n                </Card>\n\n\n\n                <Button \n                  type=\"default\" \n                  onClick={clearLink}\n                  style={{ marginTop: '8px' }}\n                 tabIndex={0}>\n                  生成新链接\n                </Button>\n              </Space>\n            </div>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default UnifiedSecondarySalesPage;"],"names":["Title","Text","Typography","Option","Select","UnifiedSecondarySalesPage","searchParams","useSearchParams","form","Form","useForm","loading","setLoading","useState","error","setError","createdLinks","setCreatedLinks","paymentMethod","setPaymentMethod","registrationCode","setRegistrationCode","registrationData","setRegistrationData","isLinkedMode","setIsLinkedMode","validationStep","setValidationStep","useEffect","document","title","salesCode","get","validateRegistrationCode","async","response","axios","code","data","success","console","_jsx","className","children","_jsxs","Card","role","level","style","textAlign","marginBottom","Alert","message","description","type","showIcon","padding","layout","onFinish","post","values","registration_code","primary_sales_id","salesData","user_sales_link","user_sales_code","sales_code","resetFields","_error$response","_error$response$data","Item","name","label","rules","required","Input","prefix","UserOutlined","placeholder","size","onChange","value","_Fragment","WalletOutlined","TextArea","rows","Button","htmlType","block","tabIndex","marginTop","Divider","Space","direction","width","backgroundColor","borderColor","strong","wordBreak","borderRadius","border","icon","CopyOutlined","onClick","navigator","clipboard","writeText","err","clearLink"],"sourceRoot":""}